[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Profiled execution.
profile=no

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS

# Pickle collected data for later comparisons.
persistent=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=


[MESSAGES CONTROL]

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time.
#enable=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once).
#disable=
#
# C0103: Invalid name for type variable
# C0111: Missing docstring
# C0203: Metaclass method should have "mcs" as first argument
# C0325: Unneccessary parens after 'print' keyword
# R0201: Method could be a function (no-self-use)
# R0903: Too few public methods (< 2)
# W0105: String statement has no effect
# W0110: map/filter on lambda could be replaced by comprehension
# W0141: Used builtin function 'map'
# W0142: Used * or ** magic
# W0401: Wildcard import
# W0403: Relative import
# W0611: Unused import
# W0612: Unused variable
# W0614: Unused import from wildcard import
# W0621: Redefining name from outer scope
# W0622: Redefining built-in  TODO: Remove this eventually.
disable=C0103, C0111, C0203, C0325, R0201, R0903, W0105, W0110, W0141, W0142,
  W0401, W0403, W0611, W0612, W0614, W0621, W0622

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html
output-format=text

# Include message's id in output
include-ids=yes

# Put messages in a separate file for each module / package specified on the
# command line instead of printing them on stdout. Reports (if any) will be
# written in a file name "pylint_global.[txt|html]".
files-output=no

# Tells whether to display a full report or only the messages
reports=yes

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Add a comment according to your evaluation note. This is used by the global
# evaluation report (RP0004).  comment=no

[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the beginning of the name of dummy variables
# (i.e. not used).
dummy-variables-rgx=_|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=


[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression which should only match correct class names
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression which should only match correct function names
# function-rgx=[a-z_][a-z0-9_]{2,30}$
#
# Allow up to 40 character function names.
function-rgx=[a-z_][a-z0-9_]{2,40}$

# Regular expression which should only match correct method names
# method-rgx=[a-z_][a-z0-9_]{2,30}$
#
# Allow 2 letter methods, and up to 40 character methods:
method-rgx=[a-z_][a-z0-9_]{1,40}$

# Regular expression which should only match correct instance attribute names
# attr-rgx=[a-z_][a-z0-9_]{2,30}$
#
# Allow two letter attributes:
attr-rgx=[a-z_][a-z0-9_]{1,30}$

# Regular expression which should only match correct argument names
# argument-rgx=[a-z_][a-z0-9_]{2,30}$
#
# Allow two letter arguments:
argument-rgx=[a-z_][a-z0-9_]{1,30}$

# Regular expression which should only match correct variable names
#variable-rgx=[a-z_][a-z0-9_]{2,30}$
#
# Allow 2 letter variables:
variable-rgx=[a-z_][a-z0-9_]{1,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=i,j,k,ex,Run,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__|test.*|setup|teardown


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=79

# Maximum number of lines in a module
max-module-lines=5000


# String used as indentation unit. This is usually " " (4 spaces) or "\t" (1
# tab).
indent-string='  '


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set).
# ignored-classes=SQLObject
#
ignored-classes=SQLObject, _socketobject, cerebro.interface.cerebro_interface_pb2, util.net.rpc_pb2,
  cerebro.master.persistent_op_state_pb2, cerebro.base.cerebro_entity_handle_pb2, cerebro.base.cerebro_error_pb2,
  medusa.medusa_printer_pb2, stats.arithmos.interface.arithmos_type_pb2, snapshot_handle, list_snapshot_handles

# When zope mode is activated, add a predefined set of Zope acquired attributes
# to generated-members.
zope=no

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E0201 when accessed. Python regular
# expressions are accepted.
generated-members=REQUEST,acl_users,aq_parent


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,string,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=

[CLASSES]

# List of interface methods to ignore, separated by a comma. This is used for
# instance to not check methods defines in Zope's Interface base class.
ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp, setup

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls


[DESIGN]

# Maximum number of arguments for function / method
# max-args=5
max-args=20

# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
#max-locals=15
max-locals=25

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
#max-branchs=12
max-branchs=25

# Maximum number of statements in function / method body
#max-statements=50
max-statements=75

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
# max-attributes=7
max-attributes=20

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
#max-public-methods=20
max-public-methods=75


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=Exception
